pipeline {
    agent any

    environment {
        // Define environment variables if necessary
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
    }

    stages {
        stage('Clonar Repositorio') {
            steps {
                // Clonar el repositorio
                git url: 'https://github.com/Luisop05/Microservices.git' 
            }
        }

        stage('Construir Microservicios') {
            steps {
                script {
                    echo 'Construyendo los microservicios...'
                    // Construir imágenes de Docker
                    sh 'docker-compose -f $DOCKER_COMPOSE_FILE build'
                }
            }
        }

        stage('Ejecutar Pruebas') {
            steps {
                script {
                    echo 'Ejecutando pruebas...'
                    // Ejecutar pruebas para pedidos-api
                    sh 'docker-compose -f $DOCKER_COMPOSE_FILE run pedidos-api python -m unittest discover -s tests'
                    // Ejecutar pruebas para inventario-api
                    sh 'docker-compose -f $DOCKER_COMPOSE_FILE run inventario-api python -m unittest discover -s tests'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo 'Iniciando los servicios...'
                    // Iniciar los servicios
                    sh 'docker-compose -f $DOCKER_COMPOSE_FILE up -d'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline ejecutado con éxito!'
        }
        failure {
            echo 'El pipeline ha fallado.'
        }
        always {
            echo 'Limpiando los recursos...'
        }
    }
}

